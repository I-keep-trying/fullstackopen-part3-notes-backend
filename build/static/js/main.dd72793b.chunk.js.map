{"version":3,"sources":["note-icon.png","components/Note.js","services/notes.js","services/login.js","components/Footer.js","components/LoginForm.js","components/Togglable.js","components/NoteForm.js","App.js","reducers/noteReducer.js","index.js"],"names":["module","exports","Note","note","toggleImportance","label","important","className","content","onClick","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","id","setToken","newToken","updatePatch","patch","login","credentials","Footer","href","target","rel","style","color","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","Togglable","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","NoteForm","createNote","newNote","setNewNote","e","preventDefault","event","placeholder","App","notes","setNotes","showAll","setShowAll","setUsername","setPassword","user","setUser","noteFormRef","useRef","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","toast","name","error","notesToShow","filter","addNote","noteObject","current","returnedNote","concat","src","logo","alt","removeItem","map","key","find","n","changedNote","catch","toggleImportanceOf","noteReducer","state","action","console","log","noteToChange","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,uC,uMCmB5BC,EAjBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAQtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCXtCK,EAAQ,KAiCG,GACbC,OA5Ba,WAGb,OAFgBC,IAAMC,IATR,cAWCC,MAAK,SAACC,GACnB,OAAOA,EAASC,SAyBlBC,OArBU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KArBf,aAqB6BL,EAAWE,GALzC,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDAsBVQ,OAba,SAACN,GAEd,OADgBN,IAAMa,IAAN,UA1BF,aA0BE,YAAwBP,EAAUQ,IAAMR,GACzCJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAY3CW,SAnCe,SAACC,GAChBlB,EAAK,iBAAakB,IAmClBC,YAVkB,SAACX,GAEnB,OADgBN,IAAMkB,MAAN,UA/BF,aA+BE,YAA0BZ,EAAUQ,IAAMR,GAC3CJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UCzB9B,GAAEe,MALN,uCAAG,WAAMC,GAAN,eAAAb,EAAA,sEACWP,IAAMW,KAHf,aAG6BS,GAD/B,cACNjB,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCqBIiB,EAtBA,WACb,OACE,yBAAK1B,UAAU,cAAf,iCAEE,uBACE2B,KAAK,mFACLC,OAAO,SACPC,IAAI,uBAEH,IACD,uBAAGC,MAAO,CAAEC,MAAO,SAAW/B,UAAU,mBAE1C,6BAVF,gBAWgB,IACd,uBAAG2B,KAAK,4DAAR,6BAC6B,KAb/B,MC4CWK,EA7CG,SAAC,GAMZ,IALLC,EAKI,EALJA,aACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,6BACE,qCAEA,0BAAMC,SAAUL,GACd,6BACE,2CACA,2BACEd,GAAG,WACHoB,MAAOH,EACPI,SAAUN,IALd,oBAQA,6BACE,2CACA,2BACEf,GAAG,WACHsB,KAAK,WACLF,MAAOF,EACPG,SAAUL,IANd,YASA,4BAAQhB,GAAG,eAAesB,KAAK,UAA/B,YC7BFC,EAAYC,sBAAW,SAACC,EAAOC,GAAS,IAAD,EACbC,oBAAS,GADI,mBACpCC,EADoC,KAC3BC,EAD2B,KAGrCC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAKF,6BACE,yBAAKtB,MAAOmB,GACV,4BAAQ/C,QAASkD,GAAmBR,EAAMU,cAE5C,yBAAKxB,MAAOqB,EAAiBnD,UAAU,oBACpC4C,EAAMW,SACP,4BAAQrD,QAASkD,GAAjB,eASRV,EAAUc,YAAc,YACTd,QCFAe,EAhCE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACLZ,mBAAS,IADJ,mBAC5Ba,EAD4B,KACnBC,EADmB,KAiBnC,OACE,yBAAK5D,UAAU,WACb,iDAEA,0BAAMsC,SAdM,SAACuB,GACfA,EAAEC,iBACFJ,EAAW,CACTzD,QAAS0D,EACT5D,WAAW,IAGb6D,EAAW,MAQP,2BACErB,MAAOoB,EACPnB,SArBiB,SAACuB,GACxBH,EAAWG,EAAMnC,OAAOW,QAqBlByB,YAAY,2BAEd,4BAAQvB,KAAK,UAAb,W,gCC+HOwB,G,MA7IH,WAAO,IAAD,EACUnB,mBAAS,IADnB,mBACToB,EADS,KACFC,EADE,OAEcrB,oBAAS,GAFvB,mBAETsB,EAFS,KAEAC,EAFA,OAGgBvB,mBAAS,IAHzB,mBAGTV,EAHS,KAGCkC,EAHD,OAIgBxB,mBAAS,IAJzB,mBAITT,EAJS,KAICkC,EAJD,OAKQzB,mBAAS,MALjB,mBAKT0B,EALS,KAKHC,EALG,KAOVC,EAAcC,mBAEpBC,qBAAU,WACRC,EAAYzE,SAASG,MAAK,SAACuE,GACzBX,EAASW,QAEV,IAEHF,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMP,EAAOW,KAAKC,MAAML,GACxBN,EAAQD,GACRK,EAAYzD,SAASoD,EAAKrE,UAE3B,IAEH,IAAMkF,EAAW,uCAAG,WAAOtB,GAAP,eAAAnD,EAAA,6DAClBmD,EAAMD,iBADY,kBAGGwB,EAAa9D,MAAM,CACpCY,WACAC,aALc,OAGVmC,EAHU,OAOhBQ,OAAOC,aAAaM,QAAQ,oBAAqBJ,KAAKK,UAAUhB,IAChEK,EAAYzD,SAASoD,EAAKrE,OAC1BsE,EAAQD,GACRiB,YAAM,YAAD,OAAajB,EAAKkB,KAAlB,MACLpB,EAAY,IACZC,EAAY,IAZI,kDAchBkB,IAAME,MAAM,qBAdI,0DAAH,sDAkBXC,EAAcxB,EAChBF,EACAA,EAAM2B,QAAO,SAACjG,GAAD,OAA6B,IAAnBA,EAAKG,aAqC1B+F,EAAU,SAACC,GACfrB,EAAYsB,QAAQ5C,mBACpByB,EAAYnE,OAAOqF,GAAYxF,MAAK,SAAC0F,GACnC9B,EAASD,EAAMgC,OAAOD,IACtBR,YAAM,oBASV,OACE,yBAAKzF,UAAU,OACb,wBAAIA,UAAU,cACZ,yBAAKmG,IAAKC,IAAMpG,UAAU,WAAWqG,IAAI,SAD3C,gBAKA,yBAAKrG,UAAU,WACb,6BACE,kBAAC,IAAD,MACU,OAATwE,EAzCP,kBAAC,EAAD,CAAWlB,YAAY,SACrB,kBAAC,EAAD,CACElB,SAAUA,EACVC,SAAUA,EACVH,qBAAsB,gBAAGN,EAAH,EAAGA,OAAH,OAAgB0C,EAAY1C,EAAOW,QACzDJ,qBAAsB,gBAAGP,EAAH,EAAGA,OAAH,OAAgB2C,EAAY3C,EAAOW,QACzDN,aAAcoD,KAsCV,6BACE,mCADF,IACeb,EAAKkB,KADpB,IAC0B,4CACxB,6BACA,4BAAQxF,QApCC,WACnB8E,OAAOC,aAAaqB,WAAW,qBAC/BzB,EAAYzD,SAAS,IACrBqD,EAAQ,MACRgB,YAAM,6BAgCI,UACA,6BArBV,kBAAC,EAAD,CAAWnC,YAAY,WAAWT,IAAK6B,GACrC,kBAAC,EAAD,CAAUhB,WAAYoC,MAwBlB,6BACA,4BAAQ5F,QAAS,kBAAMmE,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACE,qCACO,6CADP,oBAGA,6BACA,6BACGwB,EAAYW,KAAI,SAAC3G,GAAD,OACf,kBAAC,EAAD,CACE4G,IAAK5G,EAAKuB,GACVvB,KAAMA,EACNC,iBAAkB,kBApFL,SAACsB,GAC1B,IAAMvB,EAAOsE,EAAMuC,MAAK,SAACC,GAAD,OAAOA,EAAEvF,KAAOA,KAClCwF,EAAc,CAAExF,GAAIvB,EAAKuB,GAAIpB,WAAYH,EAAKG,WACpD8E,EACGvD,YAAYqF,GACZpG,MAAK,SAAC0F,GACL9B,EAASD,EAAMqC,KAAI,SAAC3G,GAAD,OAAWA,EAAKuB,KAAOA,EAAKvB,EAAOqG,MACtDR,YAAM,SAAD,OAAU7F,EAAKK,QAAf,kCAEN2G,OAAM,WACLnB,IAAME,MAAN,gBAAqB/F,EAAKK,QAA1B,sCAEAkE,EAASD,EAAM2B,QAAO,SAACa,GAAD,OAAOA,EAAEvF,KAAOA,SAwEN0F,CAAmBjH,EAAKuB,aAM1D,kBAAC,EAAD,S,gBCxGS2F,EA9CK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOvE,MACb,IAAK,WACH,MAAM,GAAN,mBAAWsE,GAAX,CAAkBC,EAAOvG,OACzB,IAAK,aACH,OAAOuG,EAAOvG,KAClB,IAAK,oBACDwG,QAAQC,IAAI,gBAAgBF,EAAOvG,MACrC,IAAMU,EAAK6F,EAAOvG,KAAKU,GACjBgG,EAAeJ,EAAMN,MAAK,SAACC,GAAD,OAAOA,EAAEvF,KAAOA,KAC1CwF,EAAW,2BACZQ,GADY,IAEfpH,WAAYoH,EAAapH,YAE3B,OAAOgH,EAAMR,KAAI,SAAC3G,GAAD,OAAWA,EAAKuB,KAAOA,EAAKvB,EAAO+G,KAEtD,QACE,OAAOI,ICXPK,EAAQC,YAAYP,GAE1BQ,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.dd72793b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/note-icon.c0078032.png\";","import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n/*   return (\n    <li className={note.important ? 'note-important' : 'note'}>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  ) */\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then((response) => {\n    return response.data\n  })\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (newObject) => {\n  const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst updatePatch = (newObject) => {\n  const request = axios.patch(`${baseUrl}/${newObject.id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  setToken,\n  updatePatch,\n}\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <div className=\"App-footer\">\n      Developed by Andrea Crego 2020\n      <a\n        href=\"https://github.com/I-keep-trying/fullstackopen-exercises/tree/master/part2/notes\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {' '}\n        <i style={{ color: 'white' }} className=\"fab fa-github\"></i>\n      </a>\n      <br />\n      Notes app for{' '}\n      <a href=\"https://studies.helsinki.fi/courses/cur/hy-CUR-136379894\">\n        Full Stack Web Development{' '}\n      </a>\n      .\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>username</label>\n          <input\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />testy_mctestface\n        </div>\n        <div>\n          <label>password</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />password\n        </div>\n        <button id=\"login-button\" type=\"submit\">\n          login\n        </button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n}\n\nexport default LoginForm\n","import React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n}\nTogglable.displayName = 'Togglable'\nexport default Togglable\n","import React, { useState } from 'react'\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (e) => {\n    e.preventDefault()\n    createNote({\n      content: newNote,\n      important: false,\n    })\n\n    setNewNote('')\n  }\n\n  return (\n    <div className=\"formDiv\">\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n          placeholder=\"note input placeholder\"\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\nexport default NoteForm\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\nimport Footer from './components/Footer'\r\nimport LoginForm from './components/LoginForm'\r\nimport Togglable from './components/Togglable'\r\nimport NoteForm from './components/NoteForm'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport './ReactToastify.css'\r\n\r\nimport logo from './note-icon.png'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  const noteFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => {\r\n      setNotes(initialNotes)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username,\r\n        password,\r\n      })\r\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      toast(`Welcome, ${user.name}!`)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      toast.error('Wrong credentials')\r\n    }\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true)\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id)\r\n    const changedNote = { id: note.id, important: !note.important }\r\n    noteService\r\n      .updatePatch(changedNote)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\r\n        toast(`Note '${note.content}' was successfully updated`)\r\n      })\r\n      .catch(() => {\r\n        toast.error(`Note '${note.content}' was already removed from server`)\r\n\r\n        setNotes(notes.filter((n) => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"login\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit={handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedNoteappUser')\r\n    noteService.setToken('')\r\n    setUser(null)\r\n    toast('Successfully logged out')\r\n  }\r\n\r\n  const addNote = (noteObject) => {\r\n    noteFormRef.current.toggleVisibility()\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote))\r\n      toast('Note created')\r\n    })\r\n  }\r\n\r\n  const noteForm = () => (\r\n    <Togglable buttonLabel=\"new note\" ref={noteFormRef}>\r\n      <NoteForm createNote={addNote} />\r\n    </Togglable>\r\n  )\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        Notes by Dre\r\n      </h1>\r\n\r\n      <div className=\"AppBody\">\r\n        <div>\r\n          <ToastContainer />\r\n          {user === null ? (\r\n            loginForm()\r\n          ) : (\r\n            <div>\r\n              <i>User</i> {user.name} <i> is logged in</i>\r\n              <br />\r\n              <button onClick={handleLogout}>logout</button>\r\n              <hr />\r\n              {noteForm()}\r\n            </div>\r\n          )}\r\n          <hr />\r\n          <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all'}\r\n          </button>\r\n        </div>\r\n        <ul>\r\n          <div>\r\n            Key: <strong>important</strong> | not important\r\n          </div>\r\n          <br />\r\n          <div>\r\n            {notesToShow.map((note) => (\r\n              <Note\r\n                key={note.id}\r\n                note={note}\r\n                toggleImportance={() => toggleImportanceOf(note.id)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </ul>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","\nconst noteReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'NEW_NOTE':\n      return [...state, action.data]\n      case 'INITIALIZE':\n        return action.data\n    case 'TOGGLE_IMPORTANCE': {\n        console.log('toggle action',action.data)\n      const id = action.data.id\n      const noteToChange = state.find((n) => n.id === id)\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important,\n      }\n      return state.map((note) => (note.id !== id ? note : changedNote))\n    }\n    default:\n      return state\n  }\n}\n\nexport const createNote = (content) => {\n  return {\n    type: 'NEW_NOTE',\n    data: {\n      content,\n      important: false,\n      id: Date.now(),\n    },\n  }\n}\n\nexport const toggleImportanceOf = (id) => {\n  return {\n    type: 'TOGGLE_IMPORTANCE',\n    data: { id },\n  }\n}\n\nexport const initializeNotes = (notes) => {\n    return {\n      type: 'INITIALIZE',\n      data: notes,\n    }\n  }\n\nexport default noteReducer\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport noteReducer from './reducers/noteReducer'\r\n\r\nconst store = createStore(noteReducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}